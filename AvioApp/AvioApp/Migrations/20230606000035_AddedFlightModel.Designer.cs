// <auto-generated />
using System;
using AvioApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvioApp.Migrations
{
    [DbContext(typeof(XWS_DbContext))]
    [Migration("20230606000035_AddedFlightModel")]
    partial class AddedFlightModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvioApp.Model.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tickets")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AvioApp.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Code")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "XWS",
                            Password = "EAA5FB65866C33255AF997A6486CF58894C3BDF23D9D38B08C7952516C997A70667C7C6CBCE2C13A5D4FC53BA9FC2BE13862929E4A45090369D2684ABDC3EDD9",
                            Role = "ADMIN",
                            Salt = new byte[] { 201, 39, 223, 251, 166, 117, 20, 173, 223, 10, 252, 5, 32, 157, 254, 87, 118, 55, 246, 24, 76, 71, 18, 31, 131, 3, 229, 145, 242, 68, 52, 78, 188, 46, 248, 142, 227, 131, 235, 37, 102, 140, 10, 240, 115, 172, 56, 20, 131, 129, 101, 188, 109, 80, 130, 199, 165, 9, 32, 111, 133, 64, 195, 198 }
                        },
                        new
                        {
                            Id = 2L,
                            Email = "user@gmail.com",
                            FirstName = "User",
                            LastName = "XWS",
                            Password = "264B5AB5C5B264E322292FD847D315DDD5BF5215249229430A2D93B9F7D7F50F61A3758CF679B5C71F1878A866EBA0F3263904B5B31FF6B0215AA16EC5230ED8",
                            Role = "USER",
                            Salt = new byte[] { 120, 49, 170, 250, 214, 193, 210, 103, 225, 74, 127, 33, 115, 190, 29, 172, 80, 143, 72, 142, 185, 82, 175, 98, 162, 249, 91, 191, 192, 212, 82, 111, 77, 56, 48, 242, 30, 18, 2, 3, 238, 174, 171, 61, 141, 122, 135, 71, 90, 156, 34, 2, 153, 128, 23, 145, 82, 167, 72, 219, 46, 182, 146, 208 }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
