// <auto-generated />
using AvioApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvioApp.Migrations
{
    [DbContext(typeof(XWS_DbContext))]
    [Migration("20230605215922_AddedRoleToUser")]
    partial class AddedRoleToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvioApp.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Code")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "XWS",
                            Password = "5A96EE1C23800D0DD409601C62A01E63F70A69F8A8A80536EDA722C74D0265B024F93F4402FBC9FF42569FBD13E785C395E3FB1A5B95A54AE3DB9779D3F8CB59",
                            Role = "ADMIN",
                            Salt = new byte[] { 158, 8, 213, 34, 222, 93, 162, 46, 205, 218, 210, 4, 208, 47, 239, 177, 170, 61, 135, 96, 219, 146, 243, 142, 50, 31, 67, 181, 168, 194, 224, 10, 81, 56, 139, 18, 242, 108, 42, 104, 83, 49, 238, 214, 7, 103, 184, 255, 215, 133, 211, 8, 121, 41, 87, 251, 160, 201, 184, 208, 161, 215, 129, 193 }
                        },
                        new
                        {
                            Id = 2L,
                            Email = "user@gmail.com",
                            FirstName = "User",
                            LastName = "XWS",
                            Password = "4C0DE2D9AFABD15BCD421E595561D039D99FAD2D23DBF29733702BA43918EE0E85DFE18B029DA7E23B0CE175A944D2733C35F31A086DE9E176C15A6022387023",
                            Role = "USER",
                            Salt = new byte[] { 76, 42, 58, 64, 22, 217, 188, 93, 167, 250, 18, 14, 236, 140, 5, 128, 151, 139, 129, 245, 198, 190, 133, 141, 191, 233, 101, 158, 168, 175, 125, 2, 132, 143, 148, 21, 198, 98, 221, 121, 26, 3, 66, 53, 44, 169, 75, 59, 202, 6, 243, 94, 247, 238, 213, 206, 109, 190, 148, 207, 154, 30, 221, 117 }
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
