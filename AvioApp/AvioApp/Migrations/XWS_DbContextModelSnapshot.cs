// <auto-generated />
using System;
using AvioApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvioApp.Migrations
{
    [DbContext(typeof(XWS_DbContext))]
    partial class XWS_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvioApp.Model.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tickets")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AvioApp.Model.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FlightId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("AvioApp.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Code")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "XWS",
                            Password = "8557DFC3F4047B55F861C46AE7F75E23406C9CE5C6002CEC56E903DD139EB25A78F7A2E5BF7A2CBD5199EF40A9A9B67C1934D2CDF2B57351C6D611DEDDCB6F8E",
                            Role = "ADMIN",
                            Salt = new byte[] { 180, 90, 161, 11, 251, 122, 18, 70, 185, 129, 195, 213, 135, 250, 82, 3, 12, 150, 16, 142, 56, 219, 203, 206, 137, 135, 60, 199, 28, 141, 232, 137, 77, 87, 23, 150, 146, 252, 13, 236, 137, 217, 72, 91, 43, 205, 115, 19, 119, 138, 249, 13, 89, 124, 186, 65, 156, 20, 86, 107, 102, 88, 104, 73 }
                        },
                        new
                        {
                            Id = 2L,
                            Email = "user@gmail.com",
                            FirstName = "User",
                            LastName = "XWS",
                            Password = "F737363D9240FF0CEA1B1846E487572594EEC89339EACCDDF2072AB8CB839758294C03EB94B6A3957A441F7FFDDF18F9618A92DCBA8E3092E5E5287E3B4A0FC2",
                            Role = "USER",
                            Salt = new byte[] { 76, 147, 52, 244, 64, 34, 87, 2, 68, 27, 68, 51, 206, 156, 71, 138, 245, 103, 248, 225, 16, 34, 203, 95, 203, 163, 50, 219, 58, 40, 159, 144, 73, 18, 223, 181, 203, 50, 19, 44, 172, 17, 232, 113, 94, 194, 174, 117, 35, 148, 132, 5, 73, 53, 245, 183, 225, 201, 7, 94, 164, 236, 78, 230 }
                        });
                });

            modelBuilder.Entity("AvioApp.Model.Ticket", b =>
                {
                    b.HasOne("AvioApp.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvioApp.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
