syntax = "proto3";

option go_package = "accommodation_booking/common/profile";

package reservation;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service ReservationService{
  rpc Get(GetReservationRequest) returns(GetReservationResponse) {
    option (google.api.http) = {
      get: "/reservation/{id}"
    };
  }

  rpc GetAll(GetAllReservationsRequest) returns(GetAllReservationsResponse) {
    option (google.api.http) = {
      get: "/reservation"
    };
  }

  rpc GetUsersReservations(GetUsersReservationsRequest) returns(GetUsersReservationsResponse) {
    option (google.api.http) = {
      get: "/reservation/user/{userId}"
    };
  }

  rpc GetAccommodationsReservations(GetAccommodationsReservationsRequest) returns(GetAccommodationsReservationsResponse) {
    option (google.api.http) = {
      get: "/reservation/user/{accommodationId}"
    };
  }

  rpc GetByHost(GetByHostRequest) returns(GetByHostResponse) {
    option (google.api.http) = {
      get: "/reservation/host"
    };
  }

  rpc GetByHostPending(GetByHostInternRequest) returns(GetByHostInternResponse) {
    option (google.api.http) = {
      get: "/reservation/host/pending/{id}"
    };
  }

  rpc GetByHostApproved(GetByHostInternRequest) returns(GetByHostInternResponse) {
    option (google.api.http) = {
      get: "/reservation/host/approved/{id}"
    };
  }

  rpc GetByHostCanceled(GetByHostInternRequest) returns(GetByHostInternResponse) {
    option (google.api.http) = {
      get: "/reservation/host/canceled/{id}"
    };
  }

  rpc GetByHostRejected(GetByHostInternRequest) returns(GetByHostInternResponse) {
    option (google.api.http) = {
      get: "/reservation/host/rejected/{id}"
    };
  }

  rpc GetMyReservations(GetMyReservationsRequest) returns(GetMyReservationsResponse) {
    option (google.api.http) = {
      get: "/reservation/my/{resType}"
    };
  }

  rpc GetBetweenDates(GetBetweenDatesRequest) returns(GetBetweenDatesResponse) {
    option (google.api.http) = {
      post: "/reservation/dates"
      body: "informations"
    };
  }

  rpc Create(CreateReservationRequest) returns(CreateReservationResponse) {
    option (google.api.http) = {
      post: "/reservation"
      body: "reservation"
    };
  }

  rpc Update(UpdateReservationRequest) returns(UpdateReservationResponse) {
    option (google.api.http) = {
      put: "/reservation/{id}"
      body: "reservation"
    };
  }

  rpc Approve(ApproveReservationRequest) returns(ApproveReservationResponse) {
    option (google.api.http) = {
      put: "/reservation/approve/{id}"
    };
  }

  rpc Reject(RejectReservationRequest) returns(RejectReservationResponse) {
    option (google.api.http) = {
      put: "/reservation/reject/{id}"
    };
  }

  rpc Cancel(CancelReservationRequest) returns(CancelReservationResponse) {
    option (google.api.http) = {
      put: "/reservation/cancel/{id}"
    };
  }

  rpc Delete(DeleteReservationRequest) returns(DeleteReservationResponse) {
    option (google.api.http) = {
      delete: "/reservation/{id}"
    };
  }
}

message GetReservationRequest {
  string id = 1;
}

message GetReservationResponse {
  ReservationOut reservation = 1;
}

message GetAllReservationsRequest {
}

message GetAllReservationsResponse {
  repeated ReservationOut reservations = 1;
}

message GetUsersReservationsRequest {
  string userId = 1;
}

message GetUsersReservationsResponse {
  repeated ReservationOut reservations = 1;
}

message GetAccommodationsReservationsRequest {
  string accommodationId = 1;
}

message GetAccommodationsReservationsResponse {
  repeated ReservationOut reservations = 1;
}

message GetByHostRequest {
}

message GetByHostResponse {
  repeated ReservationOut reservations = 1;
}

message GetByHostInternRequest {
  string id = 1;
}

message GetByHostInternResponse {
  repeated ReservationOut reservations = 1;
}

message Informations{
  string accommodationId = 1;
  google.protobuf.Timestamp beginning = 2;
  google.protobuf.Timestamp ending = 3;
}

message GetBetweenDatesRequest {
  Informations informations = 1;
}

message GetBetweenDatesResponse {
  repeated ReservationOut reservations = 1;
}
message GetMyReservationsRequest {
  string resType = 1;
}

message GetMyReservationsResponse {
  repeated ReservationOut reservations = 1;
}

message CreateReservationRequest {
  ReservationNew reservation = 1;
}

message CreateReservationResponse {
  ReservationOut reservation = 1;
}

message UpdateReservationResponse {
  ReservationOut reservation = 1;
}

message UpdateReservationRequest {
  string id = 1;
  ReservationIn reservation = 2;
}

message DeleteReservationRequest {
  string id = 1;
}

message DeleteReservationResponse {
}

message ApproveReservationRequest {
  string id = 1;
}

message RejectReservationRequest {
  string id = 1;
}

message CancelReservationResponse {
}

message CancelReservationRequest {
  string id = 1;
}

message ApproveReservationResponse {
}

message RejectReservationResponse {
}

message ReservationOut {
    string id = 1;
    AccommodationDetails accommodation = 2;
    UserDetails user = 3;
    google.protobuf.Timestamp beginning = 4;
    google.protobuf.Timestamp ending = 5;
    int32 guests = 6;
    int32 reservationStatus = 7;
}

message ReservationIn {
  string id = 1;
  string accommodationId = 2;
  google.protobuf.Timestamp beginning = 3;
  google.protobuf.Timestamp ending = 4;
  int32 guests = 5;
}

message ReservationNew {
  string accommodationId = 1;
  google.protobuf.Timestamp beginning = 2;
  google.protobuf.Timestamp ending = 3;
  int32 guests = 4;
}

message AccommodationDetails{
  string id = 1;
  string name = 2;
}

message UserDetails{
  string id = 1;
  string username = 2;
  int32 cancellationCounter = 3;
}