// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: proto/accommodation_service/accommodation_service.proto

package accommodation

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccommodationSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location       *Location              `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Beginning      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Ending         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ending,proto3" json:"ending,omitempty"`
	NumberOfGuests int32                  `protobuf:"varint,4,opt,name=numberOfGuests,proto3" json:"numberOfGuests,omitempty"`
}

func (x *AccommodationSearchRequest) Reset() {
	*x = AccommodationSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationSearchRequest) ProtoMessage() {}

func (x *AccommodationSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationSearchRequest.ProtoReflect.Descriptor instead.
func (*AccommodationSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{0}
}

func (x *AccommodationSearchRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *AccommodationSearchRequest) GetBeginning() *timestamppb.Timestamp {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *AccommodationSearchRequest) GetEnding() *timestamppb.Timestamp {
	if x != nil {
		return x.Ending
	}
	return nil
}

func (x *AccommodationSearchRequest) GetNumberOfGuests() int32 {
	if x != nil {
		return x.NumberOfGuests
	}
	return 0
}

type AccommodationSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodations []*AccommodationSearch `protobuf:"bytes,1,rep,name=accommodations,proto3" json:"accommodations,omitempty"`
}

func (x *AccommodationSearchResponse) Reset() {
	*x = AccommodationSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationSearchResponse) ProtoMessage() {}

func (x *AccommodationSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationSearchResponse.ProtoReflect.Descriptor instead.
func (*AccommodationSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{1}
}

func (x *AccommodationSearchResponse) GetAccommodations() []*AccommodationSearch {
	if x != nil {
		return x.Accommodations
	}
	return nil
}

type AccommodationSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
	TotalPrice    float32        `protobuf:"fixed32,2,opt,name=totalPrice,proto3" json:"totalPrice,omitempty"`
	PricePerNight float32        `protobuf:"fixed32,3,opt,name=pricePerNight,proto3" json:"pricePerNight,omitempty"`
}

func (x *AccommodationSearch) Reset() {
	*x = AccommodationSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationSearch) ProtoMessage() {}

func (x *AccommodationSearch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationSearch.ProtoReflect.Descriptor instead.
func (*AccommodationSearch) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{2}
}

func (x *AccommodationSearch) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

func (x *AccommodationSearch) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *AccommodationSearch) GetPricePerNight() float32 {
	if x != nil {
		return x.PricePerNight
	}
	return 0
}

type AccommodationTimePeriodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationId string                 `protobuf:"bytes,1,opt,name=accommodationId,proto3" json:"accommodationId,omitempty"`
	Beginning       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Ending          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ending,proto3" json:"ending,omitempty"`
}

func (x *AccommodationTimePeriodRequest) Reset() {
	*x = AccommodationTimePeriodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationTimePeriodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationTimePeriodRequest) ProtoMessage() {}

func (x *AccommodationTimePeriodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationTimePeriodRequest.ProtoReflect.Descriptor instead.
func (*AccommodationTimePeriodRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{3}
}

func (x *AccommodationTimePeriodRequest) GetAccommodationId() string {
	if x != nil {
		return x.AccommodationId
	}
	return ""
}

func (x *AccommodationTimePeriodRequest) GetBeginning() *timestamppb.Timestamp {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *AccommodationTimePeriodRequest) GetEnding() *timestamppb.Timestamp {
	if x != nil {
		return x.Ending
	}
	return nil
}

type AccommodationAvailableDatesForTimePeriodResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationId   string           `protobuf:"bytes,1,opt,name=accommodationId,proto3" json:"accommodationId,omitempty"`
	AccommodationName string           `protobuf:"bytes,2,opt,name=accommodationName,proto3" json:"accommodationName,omitempty"`
	AvailableDates    []*AvailableDate `protobuf:"bytes,3,rep,name=availableDates,proto3" json:"availableDates,omitempty"`
}

func (x *AccommodationAvailableDatesForTimePeriodResponse) Reset() {
	*x = AccommodationAvailableDatesForTimePeriodResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccommodationAvailableDatesForTimePeriodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccommodationAvailableDatesForTimePeriodResponse) ProtoMessage() {}

func (x *AccommodationAvailableDatesForTimePeriodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccommodationAvailableDatesForTimePeriodResponse.ProtoReflect.Descriptor instead.
func (*AccommodationAvailableDatesForTimePeriodResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{4}
}

func (x *AccommodationAvailableDatesForTimePeriodResponse) GetAccommodationId() string {
	if x != nil {
		return x.AccommodationId
	}
	return ""
}

func (x *AccommodationAvailableDatesForTimePeriodResponse) GetAccommodationName() string {
	if x != nil {
		return x.AccommodationName
	}
	return ""
}

func (x *AccommodationAvailableDatesForTimePeriodResponse) GetAvailableDates() []*AvailableDate {
	if x != nil {
		return x.AvailableDates
	}
	return nil
}

type UpdateAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationId string         `protobuf:"bytes,1,opt,name=accommodationId,proto3" json:"accommodationId,omitempty"`
	AvailableDate   *AvailableDate `protobuf:"bytes,2,opt,name=availableDate,proto3" json:"availableDate,omitempty"`
}

func (x *UpdateAvailabilityRequest) Reset() {
	*x = UpdateAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailabilityRequest) ProtoMessage() {}

func (x *UpdateAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*UpdateAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAvailabilityRequest) GetAccommodationId() string {
	if x != nil {
		return x.AccommodationId
	}
	return ""
}

func (x *UpdateAvailabilityRequest) GetAvailableDate() *AvailableDate {
	if x != nil {
		return x.AvailableDate
	}
	return nil
}

type UpdateAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *UpdateAvailabilityResponse) Reset() {
	*x = UpdateAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailabilityResponse) ProtoMessage() {}

func (x *UpdateAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAvailabilityResponse) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type GetAccommodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAccommodationRequest) Reset() {
	*x = GetAccommodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationRequest) ProtoMessage() {}

func (x *GetAccommodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationRequest.ProtoReflect.Descriptor instead.
func (*GetAccommodationRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetAccommodationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAccommodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *GetAccommodationResponse) Reset() {
	*x = GetAccommodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationResponse) ProtoMessage() {}

func (x *GetAccommodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationResponse.ProtoReflect.Descriptor instead.
func (*GetAccommodationResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetAccommodationResponse) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type GetAllAccommodationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAccommodationsRequest) Reset() {
	*x = GetAllAccommodationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationsRequest) ProtoMessage() {}

func (x *GetAllAccommodationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{9}
}

type GetAllFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceRangeLowerBound float32   `protobuf:"fixed32,1,opt,name=priceRangeLowerBound,proto3" json:"priceRangeLowerBound,omitempty"`
	PriceRangeUpperBound float32   `protobuf:"fixed32,2,opt,name=priceRangeUpperBound,proto3" json:"priceRangeUpperBound,omitempty"`
	Benefits             *Benefits `protobuf:"bytes,3,opt,name=benefits,proto3" json:"benefits,omitempty"`
	IsOutstandingHost    bool      `protobuf:"varint,4,opt,name=isOutstandingHost,proto3" json:"isOutstandingHost,omitempty"`
}

func (x *GetAllFilterRequest) Reset() {
	*x = GetAllFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFilterRequest) ProtoMessage() {}

func (x *GetAllFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFilterRequest.ProtoReflect.Descriptor instead.
func (*GetAllFilterRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllFilterRequest) GetPriceRangeLowerBound() float32 {
	if x != nil {
		return x.PriceRangeLowerBound
	}
	return 0
}

func (x *GetAllFilterRequest) GetPriceRangeUpperBound() float32 {
	if x != nil {
		return x.PriceRangeUpperBound
	}
	return 0
}

func (x *GetAllFilterRequest) GetBenefits() *Benefits {
	if x != nil {
		return x.Benefits
	}
	return nil
}

func (x *GetAllFilterRequest) GetIsOutstandingHost() bool {
	if x != nil {
		return x.IsOutstandingHost
	}
	return false
}

type Benefits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasWifi            bool `protobuf:"varint,1,opt,name=hasWifi,proto3" json:"hasWifi,omitempty"`
	HasAirConditioning bool `protobuf:"varint,2,opt,name=hasAirConditioning,proto3" json:"hasAirConditioning,omitempty"`
	HasFreeParking     bool `protobuf:"varint,3,opt,name=hasFreeParking,proto3" json:"hasFreeParking,omitempty"`
	HasKitchen         bool `protobuf:"varint,4,opt,name=hasKitchen,proto3" json:"hasKitchen,omitempty"`
	HasWashingMachine  bool `protobuf:"varint,5,opt,name=hasWashingMachine,proto3" json:"hasWashingMachine,omitempty"`
	HasBathtub         bool `protobuf:"varint,6,opt,name=hasBathtub,proto3" json:"hasBathtub,omitempty"`
	HasBalcony         bool `protobuf:"varint,7,opt,name=hasBalcony,proto3" json:"hasBalcony,omitempty"`
}

func (x *Benefits) Reset() {
	*x = Benefits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Benefits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Benefits) ProtoMessage() {}

func (x *Benefits) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Benefits.ProtoReflect.Descriptor instead.
func (*Benefits) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{11}
}

func (x *Benefits) GetHasWifi() bool {
	if x != nil {
		return x.HasWifi
	}
	return false
}

func (x *Benefits) GetHasAirConditioning() bool {
	if x != nil {
		return x.HasAirConditioning
	}
	return false
}

func (x *Benefits) GetHasFreeParking() bool {
	if x != nil {
		return x.HasFreeParking
	}
	return false
}

func (x *Benefits) GetHasKitchen() bool {
	if x != nil {
		return x.HasKitchen
	}
	return false
}

func (x *Benefits) GetHasWashingMachine() bool {
	if x != nil {
		return x.HasWashingMachine
	}
	return false
}

func (x *Benefits) GetHasBathtub() bool {
	if x != nil {
		return x.HasBathtub
	}
	return false
}

func (x *Benefits) GetHasBalcony() bool {
	if x != nil {
		return x.HasBalcony
	}
	return false
}

type GetAllAccommodationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodations []*Accommodation `protobuf:"bytes,1,rep,name=accommodations,proto3" json:"accommodations,omitempty"`
}

func (x *GetAllAccommodationsResponse) Reset() {
	*x = GetAllAccommodationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccommodationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccommodationsResponse) ProtoMessage() {}

func (x *GetAllAccommodationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccommodationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllAccommodationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllAccommodationsResponse) GetAccommodations() []*Accommodation {
	if x != nil {
		return x.Accommodations
	}
	return nil
}

type CreateAccommodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *NewAccommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *CreateAccommodationRequest) Reset() {
	*x = CreateAccommodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccommodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccommodationRequest) ProtoMessage() {}

func (x *CreateAccommodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccommodationRequest.ProtoReflect.Descriptor instead.
func (*CreateAccommodationRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{13}
}

func (x *CreateAccommodationRequest) GetAccommodation() *NewAccommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type CreateAccommodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *CreateAccommodationResponse) Reset() {
	*x = CreateAccommodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccommodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccommodationResponse) ProtoMessage() {}

func (x *CreateAccommodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccommodationResponse.ProtoReflect.Descriptor instead.
func (*CreateAccommodationResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAccommodationResponse) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type UpdateAccommodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Accommodation *Accommodation `protobuf:"bytes,2,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *UpdateAccommodationRequest) Reset() {
	*x = UpdateAccommodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccommodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccommodationRequest) ProtoMessage() {}

func (x *UpdateAccommodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccommodationRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccommodationRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateAccommodationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccommodationRequest) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type UpdateAccommodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accommodation *Accommodation `protobuf:"bytes,1,opt,name=accommodation,proto3" json:"accommodation,omitempty"`
}

func (x *UpdateAccommodationResponse) Reset() {
	*x = UpdateAccommodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccommodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccommodationResponse) ProtoMessage() {}

func (x *UpdateAccommodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccommodationResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccommodationResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAccommodationResponse) GetAccommodation() *Accommodation {
	if x != nil {
		return x.Accommodation
	}
	return nil
}

type DeleteAccommodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAccommodationRequest) Reset() {
	*x = DeleteAccommodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccommodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccommodationRequest) ProtoMessage() {}

func (x *DeleteAccommodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccommodationRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccommodationRequest) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteAccommodationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAccommodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAccommodationResponse) Reset() {
	*x = DeleteAccommodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccommodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccommodationResponse) ProtoMessage() {}

func (x *DeleteAccommodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccommodationResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccommodationResponse) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{18}
}

type Accommodation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host                          *HostRes         `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Name                          string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Location                      *Location        `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	HasWifi                       bool             `protobuf:"varint,5,opt,name=hasWifi,proto3" json:"hasWifi,omitempty"`
	HasAirConditioning            bool             `protobuf:"varint,6,opt,name=hasAirConditioning,proto3" json:"hasAirConditioning,omitempty"`
	HasFreeParking                bool             `protobuf:"varint,7,opt,name=hasFreeParking,proto3" json:"hasFreeParking,omitempty"`
	HasKitchen                    bool             `protobuf:"varint,8,opt,name=hasKitchen,proto3" json:"hasKitchen,omitempty"`
	HasWashingMachine             bool             `protobuf:"varint,9,opt,name=hasWashingMachine,proto3" json:"hasWashingMachine,omitempty"`
	HasBathtub                    bool             `protobuf:"varint,10,opt,name=hasBathtub,proto3" json:"hasBathtub,omitempty"`
	HasBalcony                    bool             `protobuf:"varint,11,opt,name=hasBalcony,proto3" json:"hasBalcony,omitempty"`
	Photos                        [][]byte         `protobuf:"bytes,12,rep,name=photos,proto3" json:"photos,omitempty"`
	MinNumberOfGuests             int32            `protobuf:"varint,13,opt,name=minNumberOfGuests,proto3" json:"minNumberOfGuests,omitempty"`
	MaxNumberOfGuests             int32            `protobuf:"varint,14,opt,name=maxNumberOfGuests,proto3" json:"maxNumberOfGuests,omitempty"`
	Availability                  []*AvailableDate `protobuf:"bytes,15,rep,name=availability,proto3" json:"availability,omitempty"`
	IsReservationAcceptenceManual bool             `protobuf:"varint,16,opt,name=isReservationAcceptenceManual,proto3" json:"isReservationAcceptenceManual,omitempty"`
}

func (x *Accommodation) Reset() {
	*x = Accommodation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accommodation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accommodation) ProtoMessage() {}

func (x *Accommodation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accommodation.ProtoReflect.Descriptor instead.
func (*Accommodation) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{19}
}

func (x *Accommodation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Accommodation) GetHost() *HostRes {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *Accommodation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Accommodation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Accommodation) GetHasWifi() bool {
	if x != nil {
		return x.HasWifi
	}
	return false
}

func (x *Accommodation) GetHasAirConditioning() bool {
	if x != nil {
		return x.HasAirConditioning
	}
	return false
}

func (x *Accommodation) GetHasFreeParking() bool {
	if x != nil {
		return x.HasFreeParking
	}
	return false
}

func (x *Accommodation) GetHasKitchen() bool {
	if x != nil {
		return x.HasKitchen
	}
	return false
}

func (x *Accommodation) GetHasWashingMachine() bool {
	if x != nil {
		return x.HasWashingMachine
	}
	return false
}

func (x *Accommodation) GetHasBathtub() bool {
	if x != nil {
		return x.HasBathtub
	}
	return false
}

func (x *Accommodation) GetHasBalcony() bool {
	if x != nil {
		return x.HasBalcony
	}
	return false
}

func (x *Accommodation) GetPhotos() [][]byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Accommodation) GetMinNumberOfGuests() int32 {
	if x != nil {
		return x.MinNumberOfGuests
	}
	return 0
}

func (x *Accommodation) GetMaxNumberOfGuests() int32 {
	if x != nil {
		return x.MaxNumberOfGuests
	}
	return 0
}

func (x *Accommodation) GetAvailability() []*AvailableDate {
	if x != nil {
		return x.Availability
	}
	return nil
}

func (x *Accommodation) GetIsReservationAcceptenceManual() bool {
	if x != nil {
		return x.IsReservationAcceptenceManual
	}
	return false
}

type AvailableDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beginning       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Ending          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ending,proto3" json:"ending,omitempty"`
	Price           float32                `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	IsPricePerGuest bool                   `protobuf:"varint,4,opt,name=isPricePerGuest,proto3" json:"isPricePerGuest,omitempty"`
}

func (x *AvailableDate) Reset() {
	*x = AvailableDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableDate) ProtoMessage() {}

func (x *AvailableDate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableDate.ProtoReflect.Descriptor instead.
func (*AvailableDate) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{20}
}

func (x *AvailableDate) GetBeginning() *timestamppb.Timestamp {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *AvailableDate) GetEnding() *timestamppb.Timestamp {
	if x != nil {
		return x.Ending
	}
	return nil
}

func (x *AvailableDate) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AvailableDate) GetIsPricePerGuest() bool {
	if x != nil {
		return x.IsPricePerGuest
	}
	return false
}

type NewAccommodation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId                        string    `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Name                          string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Location                      *Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	HasWifi                       bool      `protobuf:"varint,5,opt,name=hasWifi,proto3" json:"hasWifi,omitempty"`
	HasAirConditioning            bool      `protobuf:"varint,6,opt,name=hasAirConditioning,proto3" json:"hasAirConditioning,omitempty"`
	HasFreeParking                bool      `protobuf:"varint,7,opt,name=hasFreeParking,proto3" json:"hasFreeParking,omitempty"`
	HasKitchen                    bool      `protobuf:"varint,8,opt,name=hasKitchen,proto3" json:"hasKitchen,omitempty"`
	HasWashingMachine             bool      `protobuf:"varint,9,opt,name=hasWashingMachine,proto3" json:"hasWashingMachine,omitempty"`
	HasBathtub                    bool      `protobuf:"varint,10,opt,name=hasBathtub,proto3" json:"hasBathtub,omitempty"`
	HasBalcony                    bool      `protobuf:"varint,11,opt,name=hasBalcony,proto3" json:"hasBalcony,omitempty"`
	Photos                        [][]byte  `protobuf:"bytes,12,rep,name=photos,proto3" json:"photos,omitempty"`
	MinNumberOfGuests             int32     `protobuf:"varint,13,opt,name=minNumberOfGuests,proto3" json:"minNumberOfGuests,omitempty"`
	MaxNumberOfGuests             int32     `protobuf:"varint,14,opt,name=maxNumberOfGuests,proto3" json:"maxNumberOfGuests,omitempty"`
	IsReservationAcceptenceManual bool      `protobuf:"varint,15,opt,name=isReservationAcceptenceManual,proto3" json:"isReservationAcceptenceManual,omitempty"`
}

func (x *NewAccommodation) Reset() {
	*x = NewAccommodation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAccommodation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAccommodation) ProtoMessage() {}

func (x *NewAccommodation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAccommodation.ProtoReflect.Descriptor instead.
func (*NewAccommodation) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{21}
}

func (x *NewAccommodation) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *NewAccommodation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewAccommodation) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *NewAccommodation) GetHasWifi() bool {
	if x != nil {
		return x.HasWifi
	}
	return false
}

func (x *NewAccommodation) GetHasAirConditioning() bool {
	if x != nil {
		return x.HasAirConditioning
	}
	return false
}

func (x *NewAccommodation) GetHasFreeParking() bool {
	if x != nil {
		return x.HasFreeParking
	}
	return false
}

func (x *NewAccommodation) GetHasKitchen() bool {
	if x != nil {
		return x.HasKitchen
	}
	return false
}

func (x *NewAccommodation) GetHasWashingMachine() bool {
	if x != nil {
		return x.HasWashingMachine
	}
	return false
}

func (x *NewAccommodation) GetHasBathtub() bool {
	if x != nil {
		return x.HasBathtub
	}
	return false
}

func (x *NewAccommodation) GetHasBalcony() bool {
	if x != nil {
		return x.HasBalcony
	}
	return false
}

func (x *NewAccommodation) GetPhotos() [][]byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *NewAccommodation) GetMinNumberOfGuests() int32 {
	if x != nil {
		return x.MinNumberOfGuests
	}
	return 0
}

func (x *NewAccommodation) GetMaxNumberOfGuests() int32 {
	if x != nil {
		return x.MaxNumberOfGuests
	}
	return 0
}

func (x *NewAccommodation) GetIsReservationAcceptenceManual() bool {
	if x != nil {
		return x.IsReservationAcceptenceManual
	}
	return false
}

type HostRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId        string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	PhoneNumber   string `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	IsOutstanding bool   `protobuf:"varint,4,opt,name=isOutstanding,proto3" json:"isOutstanding,omitempty"`
}

func (x *HostRes) Reset() {
	*x = HostRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRes) ProtoMessage() {}

func (x *HostRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRes.ProtoReflect.Descriptor instead.
func (*HostRes) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{22}
}

func (x *HostRes) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *HostRes) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *HostRes) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *HostRes) GetIsOutstanding() bool {
	if x != nil {
		return x.IsOutstanding
	}
	return false
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City    string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Street  string `protobuf:"bytes,3,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_proto_accommodation_service_accommodation_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP(), []int{23}
}

func (x *Location) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Location) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

var File_proto_accommodation_service_accommodation_service_proto protoreflect.FileDescriptor

var file_proto_accommodation_service_accommodation_service_proto_rawDesc = []byte{
	0x0a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x63, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x4e, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x1e, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a,
	0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0xca, 0x01, 0x0a, 0x30, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e,
	0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0e,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x22, 0x83,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x70,
	0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x52, 0x08, 0x62, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x73,
	0x74, 0x22, 0x8a, 0x02, 0x0a, 0x08, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x68, 0x61, 0x73, 0x57, 0x69, 0x66, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x57, 0x69, 0x66, 0x69, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x41,
	0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x41, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x46,
	0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x73, 0x46, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x57, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x68, 0x61, 0x73,
	0x57, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x74, 0x68, 0x74, 0x75, 0x62, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x74, 0x68, 0x74, 0x75, 0x62, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x22, 0x5e,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5d,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65,
	0x77, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xfe, 0x04, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x61, 0x73, 0x57, 0x69, 0x66, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x57, 0x69, 0x66, 0x69, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x41, 0x69, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x41, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x46, 0x72, 0x65, 0x65,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68,
	0x61, 0x73, 0x46, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x61, 0x73, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x2c, 0x0a,
	0x11, 0x68, 0x61, 0x73, 0x57, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x68, 0x61, 0x73, 0x57, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x61, 0x73, 0x42, 0x61, 0x74, 0x68, 0x74, 0x75, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x74, 0x68, 0x74, 0x75, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x6d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61,
	0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x3a, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x1d, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a,
	0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xa7, 0x04, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x57, 0x69, 0x66, 0x69, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x57, 0x69, 0x66, 0x69, 0x12, 0x2e, 0x0a, 0x12, 0x68,
	0x61, 0x73, 0x41, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x61, 0x73, 0x41, 0x69, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x68,
	0x61, 0x73, 0x46, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x46, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x4b, 0x69, 0x74, 0x63,
	0x68, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x57, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x68, 0x61, 0x73, 0x57, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x74, 0x68, 0x74, 0x75, 0x62, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x74, 0x68, 0x74, 0x75,
	0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x42, 0x61, 0x6c, 0x63, 0x6f, 0x6e,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1d, 0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x07,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x32, 0x91, 0x0a, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x6d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x22, 0x0e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x1a,
	0x13, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x1a, 0x1b, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0xb9, 0x01, 0x0a, 0x2b,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x2c, 0x5a, 0x2a, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_accommodation_service_accommodation_service_proto_rawDescOnce sync.Once
	file_proto_accommodation_service_accommodation_service_proto_rawDescData = file_proto_accommodation_service_accommodation_service_proto_rawDesc
)

func file_proto_accommodation_service_accommodation_service_proto_rawDescGZIP() []byte {
	file_proto_accommodation_service_accommodation_service_proto_rawDescOnce.Do(func() {
		file_proto_accommodation_service_accommodation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_accommodation_service_accommodation_service_proto_rawDescData)
	})
	return file_proto_accommodation_service_accommodation_service_proto_rawDescData
}

var file_proto_accommodation_service_accommodation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_accommodation_service_accommodation_service_proto_goTypes = []interface{}{
	(*AccommodationSearchRequest)(nil),                       // 0: profile.AccommodationSearchRequest
	(*AccommodationSearchResponse)(nil),                      // 1: profile.AccommodationSearchResponse
	(*AccommodationSearch)(nil),                              // 2: profile.AccommodationSearch
	(*AccommodationTimePeriodRequest)(nil),                   // 3: profile.AccommodationTimePeriodRequest
	(*AccommodationAvailableDatesForTimePeriodResponse)(nil), // 4: profile.AccommodationAvailableDatesForTimePeriodResponse
	(*UpdateAvailabilityRequest)(nil),                        // 5: profile.UpdateAvailabilityRequest
	(*UpdateAvailabilityResponse)(nil),                       // 6: profile.UpdateAvailabilityResponse
	(*GetAccommodationRequest)(nil),                          // 7: profile.GetAccommodationRequest
	(*GetAccommodationResponse)(nil),                         // 8: profile.GetAccommodationResponse
	(*GetAllAccommodationsRequest)(nil),                      // 9: profile.GetAllAccommodationsRequest
	(*GetAllFilterRequest)(nil),                              // 10: profile.GetAllFilterRequest
	(*Benefits)(nil),                                         // 11: profile.Benefits
	(*GetAllAccommodationsResponse)(nil),                     // 12: profile.GetAllAccommodationsResponse
	(*CreateAccommodationRequest)(nil),                       // 13: profile.CreateAccommodationRequest
	(*CreateAccommodationResponse)(nil),                      // 14: profile.CreateAccommodationResponse
	(*UpdateAccommodationRequest)(nil),                       // 15: profile.UpdateAccommodationRequest
	(*UpdateAccommodationResponse)(nil),                      // 16: profile.UpdateAccommodationResponse
	(*DeleteAccommodationRequest)(nil),                       // 17: profile.DeleteAccommodationRequest
	(*DeleteAccommodationResponse)(nil),                      // 18: profile.DeleteAccommodationResponse
	(*Accommodation)(nil),                                    // 19: profile.Accommodation
	(*AvailableDate)(nil),                                    // 20: profile.AvailableDate
	(*NewAccommodation)(nil),                                 // 21: profile.NewAccommodation
	(*HostRes)(nil),                                          // 22: profile.HostRes
	(*Location)(nil),                                         // 23: profile.Location
	(*timestamppb.Timestamp)(nil),                            // 24: google.protobuf.Timestamp
}
var file_proto_accommodation_service_accommodation_service_proto_depIdxs = []int32{
	23, // 0: profile.AccommodationSearchRequest.location:type_name -> profile.Location
	24, // 1: profile.AccommodationSearchRequest.beginning:type_name -> google.protobuf.Timestamp
	24, // 2: profile.AccommodationSearchRequest.ending:type_name -> google.protobuf.Timestamp
	2,  // 3: profile.AccommodationSearchResponse.accommodations:type_name -> profile.AccommodationSearch
	19, // 4: profile.AccommodationSearch.accommodation:type_name -> profile.Accommodation
	24, // 5: profile.AccommodationTimePeriodRequest.beginning:type_name -> google.protobuf.Timestamp
	24, // 6: profile.AccommodationTimePeriodRequest.ending:type_name -> google.protobuf.Timestamp
	20, // 7: profile.AccommodationAvailableDatesForTimePeriodResponse.availableDates:type_name -> profile.AvailableDate
	20, // 8: profile.UpdateAvailabilityRequest.availableDate:type_name -> profile.AvailableDate
	19, // 9: profile.UpdateAvailabilityResponse.accommodation:type_name -> profile.Accommodation
	19, // 10: profile.GetAccommodationResponse.accommodation:type_name -> profile.Accommodation
	11, // 11: profile.GetAllFilterRequest.benefits:type_name -> profile.Benefits
	19, // 12: profile.GetAllAccommodationsResponse.accommodations:type_name -> profile.Accommodation
	21, // 13: profile.CreateAccommodationRequest.accommodation:type_name -> profile.NewAccommodation
	19, // 14: profile.CreateAccommodationResponse.accommodation:type_name -> profile.Accommodation
	19, // 15: profile.UpdateAccommodationRequest.accommodation:type_name -> profile.Accommodation
	19, // 16: profile.UpdateAccommodationResponse.accommodation:type_name -> profile.Accommodation
	22, // 17: profile.Accommodation.host:type_name -> profile.HostRes
	23, // 18: profile.Accommodation.location:type_name -> profile.Location
	20, // 19: profile.Accommodation.availability:type_name -> profile.AvailableDate
	24, // 20: profile.AvailableDate.beginning:type_name -> google.protobuf.Timestamp
	24, // 21: profile.AvailableDate.ending:type_name -> google.protobuf.Timestamp
	23, // 22: profile.NewAccommodation.location:type_name -> profile.Location
	7,  // 23: profile.AccommodationService.Get:input_type -> profile.GetAccommodationRequest
	7,  // 24: profile.AccommodationService.GetByHost:input_type -> profile.GetAccommodationRequest
	9,  // 25: profile.AccommodationService.GetAll:input_type -> profile.GetAllAccommodationsRequest
	10, // 26: profile.AccommodationService.GetAllFiltered:input_type -> profile.GetAllFilterRequest
	0,  // 27: profile.AccommodationService.GetAllSearched:input_type -> profile.AccommodationSearchRequest
	13, // 28: profile.AccommodationService.Create:input_type -> profile.CreateAccommodationRequest
	15, // 29: profile.AccommodationService.Update:input_type -> profile.UpdateAccommodationRequest
	5,  // 30: profile.AccommodationService.UpdateAvailability:input_type -> profile.UpdateAvailabilityRequest
	3,  // 31: profile.AccommodationService.GetAccommodationAvailableDatesForTimePeriod:input_type -> profile.AccommodationTimePeriodRequest
	17, // 32: profile.AccommodationService.Delete:input_type -> profile.DeleteAccommodationRequest
	8,  // 33: profile.AccommodationService.Get:output_type -> profile.GetAccommodationResponse
	12, // 34: profile.AccommodationService.GetByHost:output_type -> profile.GetAllAccommodationsResponse
	12, // 35: profile.AccommodationService.GetAll:output_type -> profile.GetAllAccommodationsResponse
	12, // 36: profile.AccommodationService.GetAllFiltered:output_type -> profile.GetAllAccommodationsResponse
	1,  // 37: profile.AccommodationService.GetAllSearched:output_type -> profile.AccommodationSearchResponse
	14, // 38: profile.AccommodationService.Create:output_type -> profile.CreateAccommodationResponse
	16, // 39: profile.AccommodationService.Update:output_type -> profile.UpdateAccommodationResponse
	6,  // 40: profile.AccommodationService.UpdateAvailability:output_type -> profile.UpdateAvailabilityResponse
	4,  // 41: profile.AccommodationService.GetAccommodationAvailableDatesForTimePeriod:output_type -> profile.AccommodationAvailableDatesForTimePeriodResponse
	18, // 42: profile.AccommodationService.Delete:output_type -> profile.DeleteAccommodationResponse
	33, // [33:43] is the sub-list for method output_type
	23, // [23:33] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_accommodation_service_accommodation_service_proto_init() }
func file_proto_accommodation_service_accommodation_service_proto_init() {
	if File_proto_accommodation_service_accommodation_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationTimePeriodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccommodationAvailableDatesForTimePeriodResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Benefits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccommodationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccommodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccommodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccommodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccommodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccommodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccommodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accommodation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAccommodation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_accommodation_service_accommodation_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_accommodation_service_accommodation_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_accommodation_service_accommodation_service_proto_goTypes,
		DependencyIndexes: file_proto_accommodation_service_accommodation_service_proto_depIdxs,
		MessageInfos:      file_proto_accommodation_service_accommodation_service_proto_msgTypes,
	}.Build()
	File_proto_accommodation_service_accommodation_service_proto = out.File
	file_proto_accommodation_service_accommodation_service_proto_rawDesc = nil
	file_proto_accommodation_service_accommodation_service_proto_goTypes = nil
	file_proto_accommodation_service_accommodation_service_proto_depIdxs = nil
}
